version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "5000"
    environment:
      - PORT=5000
      - MONGO_URI=mongodb://db:27017/event_ticketing
      - JWT_SECRET=${JWT_SECRET}
      - NODE_ENV=production
    volumes:
      - backend_data:/app/node_modules
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "80"
    environment:
      - REACT_APP_BACKEND_URL=/api
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: mongo:latest
    expose:
      - "27017"
    volumes:
      - db_data:/data/db
    restart: unless-stopped
    networks:
      - app-network
    command: ["--auth"]
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - app-network

volumes:
  backend_data:
  db_data:

networks:
  app-network:
    driver: bridge